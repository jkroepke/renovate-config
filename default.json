{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "helpers:pinGitHubActionDigestsToSemver"
  ],
  "labels": [
    "üõ†Ô∏è dependencies"
  ],
  "timezone": "Europe/Berlin",
  "schedule": [
    "* * * * 5"
  ],
  "automerge": true,
  "platformAutomerge": true,
  "packageRules": [
    {
      "enabled": true,
      "matchFileNames": [
        "charts/**"
      ],
      "commitMessagePrefix": "[{{ lookup (split packageFileDir '/') 1 }}] ",
      "groupName": "{{ lookup (split packageFileDir '/') 1 }} dependency non-major updates",
      "separateMajorMinor": true,
      "postUpdateOptions": [
        "helmUpdateSubChartArchives"
      ],
      "major": {
        "groupName": "{{ lookup (split packageFileDir '/') 1 }} dependency major updates"
      },
      "matchPackageNames": [
        "*"
      ],
      "commitBody": "/^(?:{{#each (distinct (lookupArray upgrades \"packageFileDir\"))}}{{#each (split . \"/\")}}(?:{{{.}}}/{{/each}}{{#each (split . \"/\")}}){{#unless @last}}?{{/unless}}{{/each}}{{#unless @last}}|{{/unless}}{{/each}})Chart\\.ya?ml$/",
      "bumpVersions": [
        {
          "name": "Updating Chart version",
          "filePatterns": ["/^(?:{{#each (distinct (lookupArray upgrades \"packageFileDir\"))}}{{#each (split . \"/\")}}(?:{{{.}}}/{{/each}}{{#each (split . \"/\")}}){{#unless @last}}?{{/unless}}{{/each}}{{#unless @last}}|{{/unless}}{{/each}})Chart\\.ya?ml$/"],
          "matchStrings": ["(?:^|\\n)version:\\s\"?(?<version>\\d+\\.\\d+\\.\\d+)\"?(?:$|\\n)"],
          "bumpType": "{{#if isPatch}}patch{{else}}minor{{/if}}"
        }
      ]
    },
    {
      "groupName": "golangci-lint",
      "matchPackageNames": [
        "github.com/golangci/golangci-lint/cmd/golangci-lint",
        "golangci/golangci-lint",
        "golangci/golangci-lint-action"
      ]
    },
    {
      "matchManagers": [
        "gomod"
      ],
      "matchDepTypes": [
        "indirect"
      ],
      "enabled": true
    },
    {
      "groupName": "GitHub Actions",
      "matchManagers": ["github-actions"],
      "semanticCommitScope": "github-actions",
      "separateMajorMinor": false
    },
    {
      "groupName": "golang.org/x/",
      "matchPackageNames": [
        "golang.org/x/*"
      ]
    },
    {
      "groupName": "Go tools",
      "matchFileNames": [
        "tools/**",
        "Makefile"
      ],
      "matchPackageNames": [
        "*"
      ]
    },
    {
      "matchPackageNames": [
        "golang.org/x/net"
      ],
      "sourceUrl": "https://github.com/golang/net"
    },
    {
      "matchPackageNames": [
        "golang.org/x/oauth2"
      ],
      "sourceUrl": "https://github.com/golang/oauth2"
    },
    {
      "matchPackageNames": [
        "golang.org/x/sys"
      ],
      "sourceUrl": "https://github.com/golang/sys"
    },
    {
      "matchPackageNames": [
        "golang.org/x/text"
      ],
      "sourceUrl": "https://github.com/golang/text"
    }
  ],
  "postUpdateOptions": [
    "gomodTidy"
  ],
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/./"
      ],
      "matchStrings": [
        "[\\t ]*(?:#|//) ?renovate: (?<datasource>git-refs)=(?<depName>\\S+)(?: branch=(?<currentValue>\\S+))?[\\t ]*\\r?\\n.+?[:=][\\t ]*[\"']?(?<currentDigest>[a-f0-9]+)[\"']?",
        "[\\t ]*(?:#|//) ?renovate: (?<datasource>[^=]+)=(?<depName>\\S+)(?: registry=(?<registryUrl>\\S+))?(?: versioning=(?<versioning>\\S+))?[\\t ]*\\r?\\n.+?[:=][\\t ]*[\"']?(?<currentValue>[^@\\s\"'=]+)(?:@(?<currentDigest>sha256:[a-f0-9]+))?[\"']?"
      ],
      "currentValueTemplate": "{{#if currentValue}}{{{currentValue}}}{{else if (equals datasource 'git-refs')}}main{{/if}}",
      "datasourceTemplate": "{{#if (equals datasource 'github')}}github-tags{{else}}{{{datasource}}}{{/if}}",
      "versioningTemplate": "{{#if (equals datasource 'docker')}}docker{{else if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/Makefile/"
      ],
      "matchStrings": [
        "go run (?<depName>\\S+)@(?<currentValue>\\S+)"
      ],
      "datasourceTemplate": "go"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/).+\\.yaml$/"
      ],
      "matchStrings": [
        "[\\t ]*image:[\\t ]*\\r?\\n[\\t ]*registry:[\\t ]*[\"']?(?<registry>.*?)[\"']?[\\t ]*\\r?\\n[\\t ]*(?:repository|name):[\\t ]*[\"']?(?<repository>.*?)[\"']?[\\t ]*\\r?\\n[\\t ]*tag:[\\t ]*[\"']?(?<currentValue>[\\w\\.+-]*)(?:@(?<currentDigest>sha256:[a-f0-9]+))?[\"']?",
        "[\\t ]*image:[\\t ]*[\"']?(?<registry>.+\\..+?)/(?<repository>.*?):(?<currentValue>[\\w\\.+-]*)(?:@(?<currentDigest>sha256:[a-f0-9]+))?[\"']?"
      ],
      "depNameTemplate": "{{{ registry }}}/{{{ repository }}}",
      "datasourceTemplate": "docker"
    }
  ]
}
